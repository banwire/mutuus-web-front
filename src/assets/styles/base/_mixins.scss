// Size
$tiny: 46rem;
$small: 76.8rem;
$medium: 96rem;
$large: 120rem;

// Media queries
// use example: @include respond-to('small')
$breakpoints: (
  'tiny': (
    min-width: $tiny
  ),
  'small': (
    min-width: $small
  ),
  'mid': (
    min-width: $medium
  ),
  'large': (
    min-width: $large
  )
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
}

// Prefixes
$prefixes: 'webkit', 'moz', 'ms', 'o', 'none';
@mixin prefix($property, $value) {
  @each $prefix in $prefixes {
    @if $prefix == 'none' {
      #{$property}: $value;
    } @else {
      -#{$prefix}-#{$property}: $value;
    }
  }
}

// Text selection
@mixin text-selection($color-selection, $color-selection-bg) {
  ::selection {
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }
}

// Center element
@mixin center-elem {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
